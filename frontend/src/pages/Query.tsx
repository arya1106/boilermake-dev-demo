import ResponsiveAppBar from "@/components/ResponsiveAppBar";
import {
  Button,
  Dialog,
  DialogActions,
  DialogContent,
  DialogContentText,
  DialogTitle,
  Grid,
  Toolbar,
} from "@mui/material";
import axios from "axios";
import Head from "next/head";
import { useState } from "react";
import { parseISO, format } from "date-fns";

const Query = () => {
  const [showToast, setShowToast] = useState(false);
  const [databseFileStatus, setDatabaseFileStatus] = useState("");
  const [transcript, setTranscript] = useState("");
  const [databaseLocation, setDatabaseLocation] = useState([40.4257, -86.9269]);
  const [databaseTimestamp, setDatabaseTimestamp] = useState("");
  const [databaseRecorder, setDatabaseRecorder] = useState("");
  const [databaseTitle, setDatabaseTitle] = useState("");
  const [databaseFilename, setDatabaseFilename] = useState("");

  const handleClose = () => {
    setShowToast(false);
  };

  function lon2tile(lon: number, zoom: number) {
    return Math.floor(((lon + 180) / 360) * Math.pow(2, zoom));
  }
  function lat2tile(lat: number, zoom: number) {
    return Math.floor(
      ((1 -
        Math.log(
          Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)
        ) /
          Math.PI) /
        2) *
        Math.pow(2, zoom)
    );
  }

  const handleFileChange = async (event: React.FormEvent<HTMLInputElement>) => {
    event.preventDefault();
    if (event.currentTarget.files) {
      let formData = new FormData();
      formData.append("audioFile", (event.currentTarget.files ?? [])[0]);
      const response = await axios({
        method: "post",
        url: "https://129.213.116.196:8000/queryDatabase",
        data: formData,
        headers: { "Content-Type": "multipart/form-data" },
      });
      const resData = response.data;
      if (resData["fileExistsInDB"]) {
        setDatabaseFileStatus(
          "The file you uploaded already exists in the databse. The information is below: "
        );
      } else {
        setDatabaseFileStatus(
          "The file you uploaded does not exist in the database."
        );
      }
      setTranscript(resData["text"]);
      setDatabaseLocation([resData["lat"], resData["long"]]);
      setDatabaseTimestamp(format(parseISO(resData["createdOn"]), "PPpp"));
      setShowToast(true);
      setDatabaseRecorder(resData["recorder"]);
      setDatabaseTitle(resData["title"]);
      setDatabaseFilename(resData["filename"]);
    }
  };
  return (
    <>
      <Head>
        <title>TranscribeMe</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ResponsiveAppBar />
      <Grid
        container
        spacing={0}
        direction="column"
        alignItems="center"
        justifyContent="center"
        style={{ minHeight: "100vh" }}
      >
        <Toolbar />
        <Grid item>
          <Button component="label" variant="contained">
            Upload File
            <input
              id="audioFileInput"
              type="file"
              accept="audio/*"
              onChange={handleFileChange}
              onClick={e => (e.currentTarget.value = "")}
              hidden
            />
          </Button>
        </Grid>
        <Dialog open={showToast} onClose={handleClose} fullWidth maxWidth="lg">
          <DialogTitle>File Status</DialogTitle>
          <DialogContent>
            <DialogContentText>{databseFileStatus}</DialogContentText>
            {(() => {
              if (
                databseFileStatus ===
                "The file you uploaded already exists in the databse. The information is below: "
              ) {
                return (
                  <>
                    <br />
                    <DialogContentText fontWeight="700">
                      Title:
                    </DialogContentText>
                    <DialogContentText>{databaseTitle}</DialogContentText>
                    <br />
                    <DialogContentText fontWeight="700">
                      Recorder:
                    </DialogContentText>
                    <DialogContentText>{databaseRecorder}</DialogContentText>
                    <br />
                    <DialogContentText>{databaseFilename}</DialogContentText>
                    <br />
                    <DialogContentText fontWeight="700">
                      Transcript:
                    </DialogContentText>
                    <DialogContentText>{transcript}</DialogContentText>
                    <br />
                    <DialogContentText fontWeight="700">
                      Location:
                    </DialogContentText>
                    {
                      // eslint-disable-next-line @next/next/no-img-element
                      <img
                        src={`https://tile.openstreetmap.org/17/${lon2tile(
                          databaseLocation[1],
                          17
                        )}/${lat2tile(databaseLocation[0], 17)}.png`}
                        alt="map"
                      />
                    }
                    <br />
                    <br />
                    <DialogContentText fontWeight="700">
                      Created On:
                    </DialogContentText>
                    <DialogContentText>{databaseTimestamp}</DialogContentText>
                  </>
                );
              }
            })()}
          </DialogContent>
          <DialogActions>
            <Button onClick={handleClose}>OK</Button>
          </DialogActions>
        </Dialog>
      </Grid>
    </>
  );
};

export default Query;
